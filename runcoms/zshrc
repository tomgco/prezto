#
# Executes commands at the start of an interactive session.
#
# BASE16_SCHEME="eighties"
# BASE16_SHELL="$HOME/.config/base16-shell/base16-$BASE16_SCHEME.dark.sh"
# [[ -s $BASE16_SHELL ]] && . $BASE16_SHELL
BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
#

tfdownload() {
    local system=$(uname -s | tr 'A-Z' 'a-z')
    local version=${1:-0.10.6}
    mkdir -p ${HOME}/.terraform
    pushd /tmp
    #set -e
    wget -c "https://releases.hashicorp.com/terraform/${version}/terraform_${version}_${system}_amd64.zip"
    unzip "terraform_${version}_${system}_amd64.zip"
    mv terraform "${HOME}/.terraform/terraform-${version}"
    #set +e
    popd
}

tfactivate() {
    activate() {
      ln -sf "${HOME}/.terraform/terraform-${version}" ${HOME}/bin/terraform
      hash -r
      command -V terraform
      terraform --version
    }
    local version=${1:-0.10.6}
    if [ -x "${HOME}/.terraform/terraform-${version}" ]; then
      activate
    else
      tfdownload ${version}
      activate
    fi
}

tfversions() {
    ls -1t "${HOME}/.terraform/" 2>&1 | sed -e "s/^terraform-//" | sort -n
}

# ulimit -n 2048

alias readme='nd README.*'
alias redis='redis-server /usr/local/etc/redis.conf'
alias nodeversion='curl https://raw.github.com/joyent/node/master/ChangeLog | less'
alias gzippo='cd ~/Dropbox/Projects/nodejs/gzippo/'
alias PersonalSite='cd ~/Dropbox/Projects/nodejs/PersonalSite/'
alias mongo-start='mongod run --config /usr/local/Cellar/mongodb/2.0.6-x86_64/mongod.conf'
alias sub='open -a "Sublime Text 2"'
# alias please='sudo'
alias flushdns='dscacheutil -flushcache'
alias resource='source ~/.zshrc'
alias furnace='ssh furnace -A -t "cd `pwd`; bash"'
alias sniff="sudo ngrep -W byline -d 'en0' -t '^(GET|PUT|POST) ' 'tcp and port 80'"
alias ls-la='ls -la'
alias gop='pliers -d go | bunyan'
alias dirsizes='du -ks * | sort -n -b | column -t'
alias dircounts='for dp in *; do [ -d $dp ] && echo $(find $dp|wc -l) $dp; done | sort -n -b | column -t'
alias ducks='du -cks * | sort -rn | head'
alias cleantestdbs='echo show dbs | mongo | cut -f 1 | grep -e "^test.*" | xargs -I {} echo echo db.dropDatabase\\\(\\\) \| mongo {}'
alias npmp='npm --registry=http://registry.npmjs.org'
alias npmb='npm --registry=http://registry.npm.beta.clockte.ch/'
alias topmem='ps -eo rss,vsz,pid,cputime,cmd --width 100 --sort rss,vsz | tail --lines 10'
alias rmrm='/bin/rm'
alias rm='echo "Bad things are about to happen"'
alias dps='f() {docker ps -a | awk '"'"'{print $1 " " $2}'"'"'}; f'
alias did='f() {dps | grep $1 | awk '"'"'{print $1}'"'"' | head -1}; f'   # Docker id based on grep of docker ps
alias dname='f() {dps | grep $1 | awk '"'"'{print $2}'"'"' | head -1}; f' # Docker name based on grep of docker ps
alias dall='dps | grep "/*/" | awk '"'"'{print $1}'"'"' ORS='"'"' '"'"'| head -1'
alias dlog='f() {echo $(dname $1); echo; docker logs -f $(did $1) | bunyan}; f' # Formatted output of docker container 
alias dlogt='f() {echo $(dname $1); echo; docker logs -f -t $(did $1) | bunyan}; f' # Formatted output of docker container 
alias retry='f() {until $@; do :; done}; f'
alias b2d='/usr/local/bin/docker-machine start default && eval "$(/usr/local/bin/docker-machine env default)"; docker-machine ssh default "date; sudo ntpd -q -p 78.129.254.77; date"; docker ps'
#alias dockerd='export DOCKER_HOST=tcp://192.168.64.2:2375; cd ~/Projects/boot2docker-xhyve; sudo ~/Projects/boot2docker-xhyve/xhyverun.sh; cd -'
alias xb2d='export DOCKER_HOST=tcp://192.168.64.2:2375;'
alias teamcity='open `cat .teamcity`'
alias copy='xclip -selection c'
bindkey '^R' history-incremental-pattern-search-backward
githgrep() {
  REGEX=$1
  COUNT=$2
  APPEND=""
  shift
  shift
  shift
  for i;
    do APPEND="$APPEND $i";
  done
  git grep $REGEX $(git rev-list --all --max-count=$COUNT) -- $APPEND
}
# Customize to your needs...
export VISUAL=vim
export PACMAN="pacmatic"
export LOG_LEVEL=trace
alias l='ls -la'
setopt NO_NOMATCH
if [ $TERM == 'xterm' ]; then
  TERM='xterm-256color'
fi
export EDITOR=vim
export GOPATH=$HOME/work
export PATH="$GOPATH/bin/:$PATH"
source <(kubectl completion zsh)
source <(helm completion zsh)
export PROMPT_EOL_MARK=
export AWS_VAULT_BACKEND=file
export AWS_OKTA_BACKEND=file
source /usr/share/nvm/init-nvm.sh

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /home/tomgco/.nvm/versions/node/v8.11.4/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /home/tomgco/.nvm/versions/node/v8.11.4/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /home/tomgco/.nvm/versions/node/v8.11.4/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /home/tomgco/.nvm/versions/node/v8.11.4/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /home/tomgco/Projects/yld/training-catalog/node_modules/tabtab/.completions/slss.zsh ]] && . /home/tomgco/Projects/yld/training-catalog/node_modules/tabtab/.completions/slss.zsh
